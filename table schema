create table public.departments (
  department_id numeric not null,
  department_name text null,
  department_type text null,
  is_car_wash_department boolean null default false,
  is_fuel_department boolean null default false,
  is_lottery_department boolean null default false,
  constraint departments_pkey primary key (department_id)
) TABLESPACE pg_default;

create table public.loyalty_line_items (
  line_loyalty_uuid uuid not null default gen_random_uuid (),
  line_item_uuid uuid null,
  transaction_id numeric null,
  sales_transaction_unique_id text null,
  loyalty_discount_amount numeric(10, 2) null,
  loyalty_quantity_applied numeric null,
  loyalty_tax_credit numeric(10, 2) null,
  constraint loyalty_line_items_pkey primary key (line_loyalty_uuid),
  constraint loyalty_line_items_line_item_uuid_fkey foreign KEY (line_item_uuid) references transaction_line_item (line_item_uuid),
  constraint loyalty_line_items_sales_transaction_unique_id_fkey foreign KEY (sales_transaction_unique_id) references sales_transaction (sales_transaction_unique_id)
) TABLESPACE pg_default;

create table public.payment (
  payment_uuid uuid not null default gen_random_uuid (),
  transaction_id numeric null,
  sales_transaction_unique_id text null,
  authorization_code numeric null,
  cc_name text null,
  mop_amount numeric(10, 2) null,
  mop_code numeric null,
  payment_entry_method text null,
  payment_timestamp timestamp with time zone null,
  payment_type text null,
  constraint payment_pkey primary key (payment_uuid),
  constraint payment_sales_transaction_unique_id_fkey foreign KEY (sales_transaction_unique_id) references sales_transaction (sales_transaction_unique_id)
) TABLESPACE pg_default;

create index IF not exists idx_payment_transaction on public.payment using btree (transaction_id) TABLESPACE pg_default;
create index IF not exists idx_payment_sales_transaction_unique_id on public.payment using btree (sales_transaction_unique_id) TABLESPACE pg_default;

create table public.pos_device_terminal (
  register_id numeric not null,
  store_id text null,
  device_type text null,
  constraint pos_device_terminal_pkey primary key (register_id),
  constraint pos_device_terminal_store_id_fkey foreign KEY (store_id) references store (store_id)
) TABLESPACE pg_default;

create index IF not exists idx_pos_device_store on public.pos_device_terminal using btree (store_id) TABLESPACE pg_default;

create table public.pricebook (
  upc_id numeric not null,
  department_id numeric null,
  upc_description text null,
  cost numeric(10, 2) null,
  retail_price numeric(10, 2) null,
  cost_avail_flag char(1) not null default 'N',
  retail_price_avail_flag char(1) not null default 'N',
  upc_source text null,
  created_by text not null default 'Gunjan',
  creation_date timestamp with time zone not null default now(),
  modified_by text null default null,
  modified_date timestamp with time zone null default null,
  constraint pricebook_pkey primary key (upc_id),
  constraint pricebook_department_id_fkey foreign KEY (department_id) references departments (department_id)
) TABLESPACE pg_default;

create index IF not exists idx_pricebook_department on public.pricebook using btree (department_id) TABLESPACE pg_default;
create index IF not exists idx_pricebook_source on public.pricebook using btree (upc_source) TABLESPACE pg_default;

create table public.promotions_program_details (
  promotion_id numeric not null,
  promotion_name text null,
  promo_desc text null,
  promo_amount numeric(10, 2) null,
  promo_percent numeric(5, 2) null,
  promotion_discount_method text null,
  mfg_multi_pack_flag boolean null default false,
  outlet_multi_pack_flag boolean null default false,
  tob_promo_flag boolean null default false,
  effective_start_date timestamp with time zone null,
  effective_end_date timestamp with time zone null,
  manufacturer_name text null,
  mfg_multi_pack_qty numeric null,
  mfg_promo_desc text null,
  outlet_multi_pack_qty numeric null,
  provider_name text null,
  store_pays_amount numeric(10, 2) null,
  store_pays_disc_type text null,
  store_pays_percent numeric(5, 2) null,
  vendor_pays_amount numeric(10, 2) null,
  vendor_pays_disc_type text null,
  vendor_pays_percent numeric(5, 2) null,
  constraint promotions_program_details_pkey primary key (promotion_id)
) TABLESPACE pg_default;

create table public.promotions_line_item (
  line_item_promo_uuid uuid not null default gen_random_uuid (),
  promotion_id numeric null,
  line_item_uuid uuid null,
  match_price numeric(10, 2) null,
  match_quantity numeric null,
  mix_group_id numeric null,
  line_item_promo_amount numeric(10, 2) null,
  promotion_name text null,
  promotion_type text null,
  constraint promotions_line_item_pkey primary key (line_item_promo_uuid),
  constraint promotions_line_item_line_item_uuid_fkey foreign KEY (line_item_uuid) references transaction_line_item (line_item_uuid),
  constraint promotions_line_item_promotion_id_fkey foreign KEY (promotion_id) references promotions_program_details (promotion_id)
) TABLESPACE pg_default;

create table public.sales_transaction (
  sales_transaction_unique_id text not null,
  transaction_id numeric null,
  store_id text null,
  register_id numeric null,
  transaction_event_log_id text null,
  cashier_session numeric null,
  employee_id numeric null,
  employee_name text null,
  cashier_system_id numeric null,
  food_stamp_eligible_total numeric(10, 2) null,
  grand_totalizer numeric(10, 2) null,
  total_amount numeric(10, 2) null,
  total_no_tax numeric(10, 2) null,
  total_tax_amount numeric(10, 2) null,
  transaction_datetime timestamp with time zone null,
  transaction_type text null,
  original_register_id numeric null,
  original_transaction_id numeric null,
  is_fuel_prepay boolean null default false,
  is_fuel_prepay_completion boolean null default false,
  is_rollback boolean null default false,
  is_suspended boolean null default false,
  was_recalled boolean null default false,
  constraint sales_transaction_pkey primary key (sales_transaction_unique_id),
  constraint fk_transaction_event_log foreign KEY (transaction_event_log_id) references transaction_event_log (transaction_event_log_id),
  constraint sales_transaction_register_id_fkey foreign KEY (register_id) references pos_device_terminal (register_id),
  constraint sales_transaction_original_register_id_fkey foreign KEY (original_register_id) references pos_device_terminal (register_id),
  constraint sales_transaction_store_id_fkey foreign KEY (store_id) references store (store_id)
) TABLESPACE pg_default;

create index IF not exists idx_sales_transaction_store on public.sales_transaction using btree (store_id) TABLESPACE pg_default;
create index IF not exists idx_sales_transaction_datetime on public.sales_transaction using btree (transaction_datetime) TABLESPACE pg_default;
create index IF not exists idx_sales_transaction_transaction_id on public.sales_transaction using btree (transaction_id) TABLESPACE pg_default;

create table public.store (
  store_id text not null,
  store_name text null,
  address text null,
  address2 text null,
  city text null,
  state text null,
  zip_code numeric null,
  constraint store_pkey primary key (store_id)
) TABLESPACE pg_default;

create table public.transaction_event_log (
  transaction_event_log_id text not null,
  duration numeric null,
  event_type text null,
  verifone_transaction_serial_number numeric null,
  customer_dob_entry_method text null,
  customer_dob text null,
  customer_age numeric null,
  terminal_serial_number numeric null,
  constraint transaction_event_log_pkey primary key (transaction_event_log_id)
) TABLESPACE pg_default;

create table public.transaction_line_item (
  line_item_uuid uuid not null default gen_random_uuid (),
  transaction_id numeric null,
  sales_transaction_unique_id text null,
  upc_id numeric null,
  category_name text null,
  category_number numeric null,
  department numeric null,
  department_name text null,
  department_type text null,
  has_birthday_verification boolean null default false,
  has_category_override boolean null default false,
  has_department_override boolean null default false,
  has_loyalty_line_discount boolean null default false,
  has_mix_match_promotion boolean null default false,
  has_plu_override boolean null default false,
  is_ebt_eligible boolean null default false,
  is_plu_item boolean null default false,
  line_total numeric(10, 2) null,
  network_code numeric null,
  quantity numeric null,
  transaction_line_type text null,
  unit_price numeric(10, 2) null,
  upc_description text null,
  upc_entry_type text null,
  upc_modifier numeric null,
  car_wash_package numeric null,
  car_wash_code numeric null,
  car_wash_promo_type text null,
  car_wash_promo_amount numeric(10, 2) null,
  is_fuel_only boolean null default false,
  is_fuel_sale boolean null default false,
  is_lottery_payout boolean null default false,
  is_line_void boolean null default false,
  has_special_discount boolean null default false,
  constraint transaction_line_item_pkey primary key (line_item_uuid),
  constraint transaction_line_item_sales_transaction_unique_id_fkey foreign KEY (sales_transaction_unique_id) references sales_transaction (sales_transaction_unique_id),
  constraint transaction_line_item_upc_id_fkey foreign KEY (upc_id) references pricebook (upc_id)
) TABLESPACE pg_default;

create index IF not exists idx_transaction_line_item_transaction on public.transaction_line_item using btree (transaction_id) TABLESPACE pg_default;
create index IF not exists idx_transaction_line_item_sales_transaction_unique_id on public.transaction_line_item using btree (sales_transaction_unique_id) TABLESPACE pg_default;
create index IF not exists idx_transaction_line_item_upc on public.transaction_line_item using btree (upc_id) TABLESPACE pg_default;

create table public.transaction_line_item_tax (
  line_item_tax_uuid uuid not null default gen_random_uuid (),
  line_item_uuid uuid null,
  transaction_id numeric null,
  sales_transaction_unique_id text null,
  tax_line_amount numeric(10, 2) null,
  tax_line_category text null,
  tax_line_rate numeric(5, 4) null,
  tax_line_sys_id numeric null,
  constraint transaction_line_item_tax_pkey primary key (line_item_tax_uuid),
  constraint transaction_line_item_tax_line_item_uuid_fkey foreign KEY (line_item_uuid) references transaction_line_item (line_item_uuid),
  constraint transaction_line_item_tax_sales_transaction_unique_id_fkey foreign KEY (sales_transaction_unique_id) references sales_transaction (sales_transaction_unique_id)
) TABLESPACE pg_default;

create index IF not exists idx_transaction_line_item_tax_transaction on public.transaction_line_item_tax using btree (transaction_id) TABLESPACE pg_default;
create index IF not exists idx_transaction_line_item_tax_sales_transaction_unique_id on public.transaction_line_item_tax using btree (sales_transaction_unique_id) TABLESPACE pg_default;

create table public.transaction_loyalty (
  loyalty_transaction_uuid uuid not null default gen_random_uuid (),
  transaction_id numeric null,
  sales_transaction_unique_id text null,
  loyalty_account_number text null,
  loyalty_auto_discount numeric(10, 2) null,
  loyalty_customer_discount numeric(10, 2) null,
  loyalty_entry_method text null,
  loyalty_sub_total numeric(10, 2) null,
  loyalty_program_name text null,
  constraint transaction_loyalty_pkey primary key (loyalty_transaction_uuid),
  constraint transaction_loyalty_sales_transaction_unique_id_fkey foreign KEY (sales_transaction_unique_id) references sales_transaction (sales_transaction_unique_id)
) TABLESPACE pg_default;

create index IF not exists idx_loyalty_transaction on public.transaction_loyalty using btree (transaction_id) TABLESPACE pg_default;
create index IF not exists idx_loyalty_sales_transaction_unique_id on public.transaction_loyalty using btree (sales_transaction_unique_id) TABLESPACE pg_default;

create table public.promotion_upc_linkage (
  promotion_id numeric not null,
  upc_id numeric not null,
  is_active boolean not null default true,
  constraint promotion_upc_linkage_promotion_id_fkey foreign KEY (promotion_id) references promotions_program_details (promotion_id),
  constraint promotion_upc_linkage_upc_id_fkey foreign KEY (upc_id) references pricebook (upc_id),
  constraint promotion_upc_linkage_unique unique (promotion_id, upc_id)
) TABLESPACE pg_default;

create index IF not exists idx_promotion_upc_linkage_promotion on public.promotion_upc_linkage using btree (promotion_id) TABLESPACE pg_default;
create index IF not exists idx_promotion_upc_linkage_upc on public.promotion_upc_linkage using btree (upc_id) TABLESPACE pg_default;

create table public.rebate_upc_linkage (
  rebate_id numeric not null,
  upc_id numeric not null,
  is_active boolean not null default true,
  constraint rebate_upc_linkage_rebate_id_fkey foreign KEY (rebate_id) references rebate_program_details (rebate_id),
  constraint rebate_upc_linkage_upc_id_fkey foreign KEY (upc_id) references pricebook (upc_id),
  constraint rebate_upc_linkage_unique unique (rebate_id, upc_id)
) TABLESPACE pg_default;

create index IF not exists idx_rebate_upc_linkage_rebate on public.rebate_upc_linkage using btree (rebate_id) TABLESPACE pg_default;
create index IF not exists idx_rebate_upc_linkage_upc on public.rebate_upc_linkage using btree (upc_id) TABLESPACE pg_default;